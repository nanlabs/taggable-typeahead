/*!
 * taggable-typeahead.js 0.2.3
 * https://github.com/nanlabs/taggable-typeahead
 * Date Compiled: 2013-08-28
 */

!function(a){var b={init:function(b){b=b||{},b.tags=b.tags||[],b.focusClass=b.focusClass||"tag-cloud-focus",b.valueKey=b.valueKey||"value",b.max=b.max||0;var c=new RegExp(",","g"),d=a(this),e=d.parents(".twitter-typeahead").wrap('<div class="tag-cloud" />'),f=e.find(".tt-hint"),g=e.parents(".tag-cloud"),h=function(a,b){d.trigger("tag:"+a,b)};g.click(function(){d.focus()}),d.focus(function(){g.addClass(b.focusClass)}),d.blur(function(){j(),g.removeClass(b.focusClass)});var i=function(b){if(b=b.replace(c,""),""!==b&&!m(b)&&l()){var d=a('<div class="tag"><span>'+b+"</span></div>"),f=a('<i class="icon-remove icon-white"></i>');f.click(function(){f.parent().remove(),h("removed",b)}),d.append(f),d.insertBefore(e),h("added",b)}j()},j=function(){this.value="",d.val(""),f.val("")},k=function(){return g.find(".tag span")},l=function(){return 0===b.max||k().length<b.max},m=function(b){var c=!1;return a.each(k(),function(d,e){return a(e).text()===b?(c=!0,void 0):void 0}),c};d.keyup(function(b){var c=b.keyCode,e=13===c,f=188===c,k=8===c;if((e||f)&&i(this.value),k&&d.data("delete-prev")){d.data("delete-prev",!1);var l=g.find(".tag").last();h("removed",l.find("span").text()),l.remove(),j()}d.data("delete-prev",k&&""===this.value);var m=d.val();if(-1!=m.indexOf(",")){var n=m.split(","),o=n.length;a.each(n,function(a,b){a===o-1?d.val(b):i(b)})}}),d.on("typeahead:selected",function(a,c){i(c[b.valueKey]),d.typeahead("setQuery","")}),d.data("initial-tags",b.tags||[]),a.each(b.tags,function(a,b){i(b)})},get:function(){var b=[];return a(".tag span",this.parents(".tag-cloud")).each(function(){b.push(a(this).text())}),b},clear:function(b){b=b||{};var c=a(this);c.closest(".tag-cloud").find("div.tag").remove(),b.silent||c.trigger("tag:clear")},reset:function(){var b=a(this);b.taggable("clear",{silent:!0}),b.taggable("addTags",b.data("initial-tags"),{silent:!0}),b.trigger("tag:reset")},save:function(){var b=a(this);b.data("initial-tags",b.taggable("get")||[])},addTags:function(b,c){var d=a(this);a.each(b,function(a,b){d.taggable("addTag",b,c)})},addTag:function(b,c){c||(c={}),c.silent=c.silent?!0:!1;var d=new RegExp(",","g");b=b.replace(d,"");var e=a(this).taggable("get");if(""!==b&&e.indexOf(b)<0){var f=a('<div class="tag"><span>'+b+"</span></div>"),g=a('<i class="icon-remove icon-white"></i>'),h=a(this),i=h.parents(".twitter-typeahead"),j=i.find(".tt-hint");g.click(function(){g.parent().remove(),h.trigger("tag:removed",b)}),f.append(g),f.insertBefore(i),c.silent||h.trigger("tag:added",b),this.value="",h.val(""),j.val("")}}};jQuery.fn.taggable=function(c){return b[c]?b[c].apply(this,[].slice.call(arguments,1)):"object"!=typeof c&&c?(a.error("Method "+c+" does not exist on taggable plugin"),void 0):b.init.apply(this,arguments)}}(window.jQuery);